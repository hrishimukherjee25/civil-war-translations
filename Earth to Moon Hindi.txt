## Bing
рдирдорд╕реНрддреЗ, рдпрд╣ рдмрд┐рдВрдЧ рд╣реИред ЁЯШК
рдореБрдЭреЗ рдЖрдкрдХреЗ рджреНрд╡рд╛рд░рд╛ рднреЗрдЬреЗ рдЧрдП рдкрд╛рда рдХреЛ рд╣рд┐рдВрджреА рдореЗрдВ рдкреБрдирд░реНрд▓реЗрдЦрд┐рдд рдХрд░рдиреЗ рдХреА рдХреЛрд╢рд┐рд╢ рдХреА рд╣реИред рдпрд╣рд╛рдБ рдкреБрдирд░реНрд▓реЗрдЦрди рдХрд╛ рдкрд░рд┐рдгрд╛рдо рд╣реИред

# рдЧрдгрд┐рдд рдореЙрдбреНрдпреВрд▓ рдХреЛ рдЖрдпрд╛рдд рдХрд░реЗрдВ
import math

# рдХреБрдЫ рд╕реНрдерд┐рд░рд╛рдВрдХ рдкрд░рд┐рднрд╛рд╖рд┐рдд рдХрд░реЗрдВ
G = 6.674e-11 # рдЧреБрд░реБрддреНрд╡рд╛рдХрд░реНрд╖рдг рдирд┐рд░рдВрддрд░
M = 5.972e24 # рдкреГрдереНрд╡реА рдХрд╛ рджреНрд░рд╡реНрдпрдорд╛рди
m = 7.342e22 # рдЪрдВрджреНрд░рдорд╛ рдХрд╛ рджреНрд░рд╡реНрдпрдорд╛рди
R = 6.371e6 # рдкреГрдереНрд╡реА рдХрд╛ рддреНрд░рд┐рдЬреНрдпрд╛
r = 1.737e6 # рдЪрдВрджреНрд░рдорд╛ рдХрд╛ рддреНрд░рд┐рдЬреНрдпрд╛
d = 3.844e8 # рдкреГрдереНрд╡реА рдФрд░ рдЪрдВрджреНрд░рдорд╛ рдХреЗ рдмреАрдЪ рдХреА рджреВрд░реА
v = 1.022e4 # рдкреГрдереНрд╡реА рдХреА рднрд╛рдЧрдиреЗ рдХреА рдЪрд╛рд▓

# рдЧреБрд░реБрддреНрд╡рд╛рдХрд░реНрд╖рдг рдмрд▓ рдХреА рдЧрдгрдирд╛ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдПрдХ рдлрд╝рдВрдХреНрд╢рди рдкрд░рд┐рднрд╛рд╖рд┐рдд рдХрд░реЗрдВ
def gravity(m1, m2, d):
    return G * m1 * m2 / d**2

# рдХрдХреНрд╖реАрдп рдЪрд╛рд▓ рдХреА рдЧрдгрдирд╛ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдПрдХ рдлрд╝рдВрдХреНрд╢рди рдкрд░рд┐рднрд╛рд╖рд┐рдд рдХрд░реЗрдВ
def orbit(m, r):
    return math.sqrt(G * m / r)

# рдбреЗрд▓реНрдЯрд╛-рд╡реА рдХреА рдЧрдгрдирд╛ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдПрдХ рдлрд╝рдВрдХреНрд╢рди рдкрд░рд┐рднрд╛рд╖рд┐рдд рдХрд░реЗрдВ
def delta_v(v1, v2):
    return abs(v1 - v2)

# рд░реЙрдХреЗрдЯ рд▓реЙрдиреНрдЪ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдПрдХ рдлрд╝рдВрдХреНрд╢рди рдкрд░рд┐рднрд╛рд╖рд┐рдд рдХрд░реЗрдВ
def launch():
    # рдкреНрд░рд╛рд░рдВрднрд┐рдХ рд╕реНрдерд┐рддрд┐рдпреЛрдВ рдХреЛ рдкреНрд░рд┐рдВрдЯ рдХрд░реЗрдВ
    print("рдкреГрдереНрд╡реА рд╕реЗ рдЪрдВрджреНрд░рдорд╛ рдХреА рдУрд░ рд░реЙрдХреЗрдЯ рд▓реЙрдиреНрдЪ рдХрд░ рд░рд╣реЗ рд╣реИрдВ...")
    print(f"рд░реЙрдХреЗрдЯ рдХрд╛ рдкреНрд░рд╛рд░рдВрднрд┐рдХ рджреНрд░рд╡реНрдпрдорд╛рди: {m_rocket} рдХрд┐рд▓реЛрдЧреНрд░рд╛рдо")
    print(f"рд░реЙрдХреЗрдЯ рдХреА рдкреНрд░рд╛рд░рдВрднрд┐рдХ рдЪрд╛рд▓: {v_rocket} рдореАрдЯрд░/рд╕реЗрдХрдВрдб")
    print(f"рдкреГрдереНрд╡реА рд╕реЗ рдкреНрд░рд╛рд░рдВрднрд┐рдХ рджреВрд░реА: {R} рдореАрдЯрд░")
    print(f"рдЪрдВрджреНрд░рдорд╛ рд╕реЗ рдкреНрд░рд╛рд░рдВрднрд┐рдХ рджреВрд░реА: {d - R} рдореАрдЯрд░")
    print(f"рдкреГрдереНрд╡реА рд╕реЗ рдкреНрд░рд╛рд░рдВрднрд┐рдХ рдЧреБрд░реБрддреНрд╡рд╛рдХрд░реНрд╖рдг рдмрд▓: {gravity(M, m_rocket, R)} рдиреНрдпреВрдЯрди")
    print(f"рдЪрдВрджреНрд░рдорд╛ рд╕реЗ рдкреНрд░рд╛рд░рдВрднрд┐рдХ рдЧреБрд░реБрддреНрд╡рд╛рдХрд░реНрд╖рдг рдмрд▓: {gravity(m, m_rocket, d - R)} рдиреНрдпреВрдЯрди")
    print()

    # рдкреГрдереНрд╡реА рдХреА рдЧреБрд░реБрддреНрд╡рд╛рдХрд░реНрд╖рдг рд╕реЗ рдмрдЪрдиреЗ рдХреЗ рд▓рд┐рдП рдбреЗрд▓реНрдЯрд╛-рд╡реА рдХреА рдЖрд╡рд╢реНрдпрдХрддрд╛ рдХреА рдЧрдгрдирд╛ рдХрд░реЗрдВ
    dv1 = delta_v(v_rocket, v)
    print(f"рдкреГрдереНрд╡реА рдХреА рдЧреБрд░реБрддреНрд╡рд╛рдХрд░реНрд╖рдг рд╕реЗ рдмрдЪрдиреЗ рдХреЗ рд▓рд┐рдП рдбреЗрд▓реНрдЯрд╛-рд╡реА рдХреА рдЖрд╡рд╢реНрдпрдХрддрд╛: {dv1} рдореАрдЯрд░/рд╕реЗрдХрдВрдб")

    # рдкреГрдереНрд╡реА рдХреА рдЧреБрд░реБрддреНрд╡рд╛рдХрд░реНрд╖рдг рд╕реЗ рдмрдЪрдиреЗ рдХреЗ рд▓рд┐рдП рдИрдВрдзрди рдХреЗ рджреНрд░рд╡реНрдпрдорд╛рди рдХреА рдЖрд╡рд╢реНрдпрдХрддрд╛ рдХреА рдЧрдгрдирд╛ рдХрд░реЗрдВ
    m_fuel1 = m_rocket * (math.exp(dv1 / Isp) - 1)
    print(f"рдкреГрдереНрд╡реА рдХреА рдЧреБрд░реБрддреНрд╡рд╛рдХрд░реНрд╖рдг рд╕реЗ рдмрдЪрдиреЗ рдХреЗ рд▓рд┐рдП рдИрдВрдзрди рдХреЗ рджреНрд░рд╡реНрдпрдорд╛рди рдХреА рдЖрд╡рд╢реНрдпрдХрддрд╛: {m_fuel1} рдХрд┐рд▓реЛрдЧреНрд░рд╛рдо")

    # рдкреГрдереНрд╡реА рдХреА рдЧреБрд░реБрддреНрд╡рд╛рдХрд░реНрд╖рдг рд╕реЗ рдмрдЪрдиреЗ рдХреЗ рдмрд╛рдж рд░реЙрдХреЗрдЯ рдХреЗ рджреНрд░рд╡реНрдпрдорд╛рди рдФрд░ рдЪрд╛рд▓ рдХреЛ рдЕрдкрдбреЗрдЯ рдХрд░реЗрдВ
    m_rocket -= m_fuel1
    v_rocket += dv1
    print(f"рдкреГрдереНрд╡реА рдХреА рдЧреБрд░реБрддреНрд╡рд╛рдХрд░реНрд╖рдг рд╕реЗ рдмрдЪрдиреЗ рдХреЗ рдмрд╛рдж рд░реЙрдХреЗрдЯ рдХрд╛ рджреНрд░рд╡реНрдпрдорд╛рди: {m_rocket} рдХрд┐рд▓реЛрдЧреНрд░рд╛рдо")
    print(f"рдкреГрдереНрд╡реА рдХреА рдЧреБрд░реБрддреНрд╡рд╛рдХрд░реНрд╖рдг рд╕реЗ рдмрдЪрдиреЗ рдХреЗ рдмрд╛рдж рд░реЙрдХреЗрдЯ рдХреА рдЪрд╛рд▓: {v_rocket} рдореАрдЯрд░/рд╕реЗрдХрдВрдб")
    print()

    # рдЪрдВрджреНрд░рдорд╛ рдХреЗ рдХрдХреНрд╖рд╛ рдореЗрдВ рдкреНрд░рд╡реЗрд╢ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдбреЗрд▓реНрдЯрд╛-рд╡реА рдХреА рдЖрд╡рд╢реНрдпрдХрддрд╛ рдХреА рдЧрдгрдирд╛ рдХрд░реЗрдВ
    dv2 = delta_v(v_rocket, orbit(m, r))
    print(f"рдЪрдВрджреНрд░рдорд╛ рдХреЗ рдХрдХреНрд╖рд╛ рдореЗрдВ рдкреНрд░рд╡реЗрд╢ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдбреЗрд▓реНрдЯрд╛-рд╡реА рдХреА рдЖрд╡рд╢реНрдпрдХрддрд╛: {dv2} рдореАрдЯрд░/рд╕реЗрдХрдВрдб")

    # рдЪрдВрджреНрд░рдорд╛ рдХреЗ рдХрдХреНрд╖рд╛ рдореЗрдВ рдкреНрд░рд╡реЗрд╢ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдИрдВрдзрди рдХреЗ рджреНрд░рд╡реНрдпрдорд╛рди рдХреА рдЖрд╡рд╢реНрдпрдХрддрд╛ рдХреА рдЧрдгрдирд╛ рдХрд░реЗрдВ
    m_fuel2 = m_rocket * (math.exp(dv2 / Isp) - 1)
    print(f"рдЪрдВрджреНрд░рдорд╛ рдХреЗ рдХрдХреНрд╖рд╛ рдореЗрдВ рдкреНрд░рд╡реЗрд╢ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдИрдВрдзрди рдХреЗ рджреНрд░рд╡реНрдпрдорд╛рди рдХреА рдЖрд╡рд╢реНрдпрдХрддрд╛: {m_fuel2} kg")

    # Update the mass and velocity of the rocket after entering Moon's orbit
    m_rocket -= m_fuel2
    v_rocket -= dv2
    print(f"Mass of rocket after entering Moon's orbit: {m_rocket} kg")
    print(f"Velocity of rocket after entering Moon's orbit: {v_rocket} m/s")
    print()

    # Print the final conditions
    print("The rocket has successfully reached the Moon!")
    print(f"Final mass of rocket: {m_rocket} kg")
    print(f"Final velocity of rocket: {v_rocket} m/s")
    print(f"Final distance from Earth: {d - r} m")
    print(f"Final distance from Moon: {r} m")
    print(f"Final gravitational force from Earth: {gravity(M, m_rocket, d - r)} N")
    print(f"Final gravitational force from Moon: {gravity(m, m_rocket, r)} N")
    print()

# Define some parameters for the rocket
m_rocket = 30000 # Mass of rocket in kg
v_rocket = 0 # Velocity of rocket in m/s
Isp = 300 # Specific impulse of rocket engine in s

# Call the launch function
launch()
```

